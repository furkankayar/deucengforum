{"remainingRequest":"/home/furkan/Desktop/DEUCENGFORUM/APP/node_modules/babel-loader/lib/index.js!/home/furkan/Desktop/DEUCENGFORUM/APP/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/furkan/Desktop/DEUCENGFORUM/APP/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/furkan/Desktop/DEUCENGFORUM/APP/demo/docs/Tables/DataTableJSONPage.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/furkan/Desktop/DEUCENGFORUM/APP/demo/docs/Tables/DataTableJSONPage.vue","mtime":1576814026000},{"path":"/home/furkan/Desktop/DEUCENGFORUM/APP/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/furkan/Desktop/DEUCENGFORUM/APP/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/furkan/Desktop/DEUCENGFORUM/APP/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/furkan/Desktop/DEUCENGFORUM/APP/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZm9yLWVhY2giOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5tYXAiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5vYmplY3QudG8tc3RyaW5nIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvd2ViLmRvbS1jb2xsZWN0aW9ucy5mb3ItZWFjaCI7Ci8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCmltcG9ydCB7IG1kYkRhdGF0YWJsZSwgbWRiQ29udGFpbmVyLCBtZGJSb3csIG1kYkljb24gfSBmcm9tICdtZGJ2dWUnOwpleHBvcnQgZGVmYXVsdCB7CiAgY29tcG9uZW50czogewogICAgbWRiRGF0YXRhYmxlOiBtZGJEYXRhdGFibGUsCiAgICBtZGJDb250YWluZXI6IG1kYkNvbnRhaW5lciwKICAgIG1kYlJvdzogbWRiUm93LAogICAgbWRiSWNvbjogbWRiSWNvbgogIH0sCiAgZGF0YTogZnVuY3Rpb24gZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIGNvbHVtbnM6IFtdLAogICAgICByb3dzOiBbXQogICAgfTsKICB9LAogIGNvbXB1dGVkOiB7CiAgICBkYXRhOiBmdW5jdGlvbiBkYXRhKCkgewogICAgICByZXR1cm4gewogICAgICAgIGNvbHVtbnM6IHRoaXMuY29sdW1ucywKICAgICAgICByb3dzOiB0aGlzLnJvd3MKICAgICAgfTsKICAgIH0KICB9LAogIG1ldGhvZHM6IHsKICAgIGZpbHRlckRhdGE6IGZ1bmN0aW9uIGZpbHRlckRhdGEoZGF0YUFyciwga2V5cykgewogICAgICB2YXIgZGF0YSA9IGRhdGFBcnIubWFwKGZ1bmN0aW9uIChlbnRyeSkgewogICAgICAgIHZhciBmaWx0ZXJlZEVudHJ5ID0ge307CiAgICAgICAga2V5cy5mb3JFYWNoKGZ1bmN0aW9uIChrZXkpIHsKICAgICAgICAgIGlmIChrZXkgaW4gZW50cnkpIHsKICAgICAgICAgICAgZmlsdGVyZWRFbnRyeVtrZXldID0gZW50cnlba2V5XTsKICAgICAgICAgIH0KICAgICAgICB9KTsKICAgICAgICByZXR1cm4gZmlsdGVyZWRFbnRyeTsKICAgICAgfSk7CiAgICAgIHJldHVybiBkYXRhOwogICAgfQogIH0sCiAgbW91bnRlZDogZnVuY3Rpb24gbW91bnRlZCgpIHsKICAgIHZhciBfdGhpcyA9IHRoaXM7CgogICAgZmV0Y2goJ2h0dHBzOi8vanNvbnBsYWNlaG9sZGVyLnR5cGljb2RlLmNvbS90b2RvcycpLnRoZW4oZnVuY3Rpb24gKHJlcykgewogICAgICByZXR1cm4gcmVzLmpzb24oKTsKICAgIH0pLnRoZW4oZnVuY3Rpb24gKGpzb24pIHsKICAgICAgdmFyIGtleXMgPSBbImlkIiwgInRpdGxlIiwgImNvbXBsZXRlZCJdOwoKICAgICAgdmFyIGVudHJpZXMgPSBfdGhpcy5maWx0ZXJEYXRhKGpzb24sIGtleXMpOyAvL2NvbHVtbnMKCgogICAgICBfdGhpcy5jb2x1bW5zID0ga2V5cy5tYXAoZnVuY3Rpb24gKGtleSkgewogICAgICAgIHJldHVybiB7CiAgICAgICAgICBsYWJlbDoga2V5LnRvVXBwZXJDYXNlKCksCiAgICAgICAgICBmaWVsZDoga2V5LAogICAgICAgICAgc29ydDogJ2FzYycKICAgICAgICB9OwogICAgICB9KTsgLy9yb3dzCgogICAgICBlbnRyaWVzLm1hcChmdW5jdGlvbiAoZW50cnkpIHsKICAgICAgICByZXR1cm4gX3RoaXMucm93cy5wdXNoKGVudHJ5KTsKICAgICAgfSk7CiAgICB9KTsKICB9Cn07"},{"version":3,"sources":["DataTableJSONPage.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAsBA,SAAA,YAAA,EAAA,YAAA,EAAA,MAAA,EAAA,OAAA,QAAA,QAAA;AACA,eAAA;AACA,EAAA,UAAA,EAAA;AACA,IAAA,YAAA,EAAA,YADA;AAEA,IAAA,YAAA,EAAA,YAFA;AAGA,IAAA,MAAA,EAAA,MAHA;AAIA,IAAA,OAAA,EAAA;AAJA,GADA;AAOA,EAAA,IAPA,kBAOA;AACA,WAAA;AACA,MAAA,OAAA,EAAA,EADA;AAEA,MAAA,IAAA,EAAA;AAFA,KAAA;AAIA,GAZA;AAaA,EAAA,QAAA,EAAA;AACA,IAAA,IADA,kBACA;AACA,aAAA;AACA,QAAA,OAAA,EAAA,KAAA,OADA;AAEA,QAAA,IAAA,EAAA,KAAA;AAFA,OAAA;AAIA;AANA,GAbA;AAqBA,EAAA,OAAA,EAAA;AACA,IAAA,UADA,sBACA,OADA,EACA,IADA,EACA;AACA,UAAA,IAAA,GAAA,OAAA,CAAA,GAAA,CAAA,UAAA,KAAA,EAAA;AACA,YAAA,aAAA,GAAA,EAAA;AACA,QAAA,IAAA,CAAA,OAAA,CAAA,UAAA,GAAA,EAAA;AACA,cAAA,GAAA,IAAA,KAAA,EAAA;AACA,YAAA,aAAA,CAAA,GAAA,CAAA,GAAA,KAAA,CAAA,GAAA,CAAA;AACA;AACA,SAJA;AAKA,eAAA,aAAA;AACA,OARA,CAAA;AASA,aAAA,IAAA;AACA;AAZA,GArBA;AAmCA,EAAA,OAnCA,qBAmCA;AAAA;;AACA,IAAA,KAAA,CAAA,4CAAA,CAAA,CACA,IADA,CACA,UAAA,GAAA;AAAA,aAAA,GAAA,CAAA,IAAA,EAAA;AAAA,KADA,EAEA,IAFA,CAEA,UAAA,IAAA,EAAA;AACA,UAAA,IAAA,GAAA,CAAA,IAAA,EAAA,OAAA,EAAA,WAAA,CAAA;;AACA,UAAA,OAAA,GAAA,KAAA,CAAA,UAAA,CAAA,IAAA,EAAA,IAAA,CAAA,CAFA,CAGA;;;AACA,MAAA,KAAA,CAAA,OAAA,GAAA,IAAA,CAAA,GAAA,CAAA,UAAA,GAAA,EAAA;AACA,eAAA;AACA,UAAA,KAAA,EAAA,GAAA,CAAA,WAAA,EADA;AAEA,UAAA,KAAA,EAAA,GAFA;AAGA,UAAA,IAAA,EAAA;AAHA,SAAA;AAKA,OANA,CAAA,CAJA,CAWA;;AACA,MAAA,OAAA,CAAA,GAAA,CAAA,UAAA,KAAA;AAAA,eAAA,KAAA,CAAA,IAAA,CAAA,IAAA,CAAA,KAAA,CAAA;AAAA,OAAA;AACA,KAfA;AAgBA;AApDA,CAAA","sourcesContent":["<template>\n  <mdb-container class=\"mt-5\">\n    <mdb-row class=\"mt-5 align-items-center justify-content-start\">\n      <h4 class=\"demo-title\"><strong>Datatables</strong></h4>\n      <a href=\"https://mdbootstrap.com/docs/vue/tables/datatables/?utm_source=DemoApp&utm_medium=MDBVueFree\" class=\"border grey-text px-2 border-light rounded ml-2\" target=\"_blank\"><mdb-icon icon=\"graduation-cap\" class=\"mr-2\"/>Docs</a>\n    </mdb-row>\n    <section class=\"demo-section\">\n      <h4>Datatable with other JSON data structure</h4>\n      <section>\n        <mdb-datatable\n          :data=\"data\"\n          striped\n          bordered\n          arrows\n          :display=\"3\"\n        />\n      </section>\n    </section>\n  </mdb-container>\n</template>\n\n<script>\n  import { mdbDatatable, mdbContainer, mdbRow, mdbIcon } from 'mdbvue';\n  export default {\n    components: {\n      mdbDatatable,\n      mdbContainer, \n      mdbRow,\n      mdbIcon\n    },\n    data() {\n      return {\n        columns: [],\n        rows: []\n      };\n    },\n    computed: {\n      data() {\n        return {\n          columns: this.columns,\n          rows: this.rows\n        };\n      },\n    },\n    methods: {\n      filterData(dataArr, keys) {\n        let data = dataArr.map(entry => {\n          let filteredEntry = {};\n          keys.forEach(key => {\n            if (key in entry) {\n              filteredEntry[key] = entry[key];\n            }\n          });\n          return filteredEntry;\n        });\n        return data;\n      }\n    },\n    mounted(){\n      fetch('https://jsonplaceholder.typicode.com/todos')\n        .then(res => res.json())\n        .then(json => {\n          let keys = [\"id\", \"title\", \"completed\"];\n          let entries = this.filterData(json, keys);\n          //columns\n          this.columns = keys.map(key => {\n            return {\n              label: key.toUpperCase(),\n              field: key,\n              sort: 'asc'\n            };\n          });\n          //rows\n          entries.map(entry => this.rows.push(entry));\n        })\n    }\n  };\n</script>\n\n<style>\n</style>\n"],"sourceRoot":"demo/docs/Tables"}]}