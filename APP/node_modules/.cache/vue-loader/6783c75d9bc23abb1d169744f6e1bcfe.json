{"remainingRequest":"/home/furkan/Desktop/DEUCENGFORUM/APP/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/furkan/Desktop/DEUCENGFORUM/APP/demo/docs/Tables/DataTableJSONPage.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/furkan/Desktop/DEUCENGFORUM/APP/demo/docs/Tables/DataTableJSONPage.vue","mtime":1576814026000},{"path":"/home/furkan/Desktop/DEUCENGFORUM/APP/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/furkan/Desktop/DEUCENGFORUM/APP/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/furkan/Desktop/DEUCENGFORUM/APP/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/furkan/Desktop/DEUCENGFORUM/APP/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCB7IG1kYkRhdGF0YWJsZSwgbWRiQ29udGFpbmVyLCBtZGJSb3csIG1kYkljb24gfSBmcm9tICdtZGJ2dWUnOwpleHBvcnQgZGVmYXVsdCB7CiAgY29tcG9uZW50czogewogICAgbWRiRGF0YXRhYmxlLAogICAgbWRiQ29udGFpbmVyLCAKICAgIG1kYlJvdywKICAgIG1kYkljb24KICB9LAogIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICBjb2x1bW5zOiBbXSwKICAgICAgcm93czogW10KICAgIH07CiAgfSwKICBjb21wdXRlZDogewogICAgZGF0YSgpIHsKICAgICAgcmV0dXJuIHsKICAgICAgICBjb2x1bW5zOiB0aGlzLmNvbHVtbnMsCiAgICAgICAgcm93czogdGhpcy5yb3dzCiAgICAgIH07CiAgICB9LAogIH0sCiAgbWV0aG9kczogewogICAgZmlsdGVyRGF0YShkYXRhQXJyLCBrZXlzKSB7CiAgICAgIGxldCBkYXRhID0gZGF0YUFyci5tYXAoZW50cnkgPT4gewogICAgICAgIGxldCBmaWx0ZXJlZEVudHJ5ID0ge307CiAgICAgICAga2V5cy5mb3JFYWNoKGtleSA9PiB7CiAgICAgICAgICBpZiAoa2V5IGluIGVudHJ5KSB7CiAgICAgICAgICAgIGZpbHRlcmVkRW50cnlba2V5XSA9IGVudHJ5W2tleV07CiAgICAgICAgICB9CiAgICAgICAgfSk7CiAgICAgICAgcmV0dXJuIGZpbHRlcmVkRW50cnk7CiAgICAgIH0pOwogICAgICByZXR1cm4gZGF0YTsKICAgIH0KICB9LAogIG1vdW50ZWQoKXsKICAgIGZldGNoKCdodHRwczovL2pzb25wbGFjZWhvbGRlci50eXBpY29kZS5jb20vdG9kb3MnKQogICAgICAudGhlbihyZXMgPT4gcmVzLmpzb24oKSkKICAgICAgLnRoZW4oanNvbiA9PiB7CiAgICAgICAgbGV0IGtleXMgPSBbImlkIiwgInRpdGxlIiwgImNvbXBsZXRlZCJdOwogICAgICAgIGxldCBlbnRyaWVzID0gdGhpcy5maWx0ZXJEYXRhKGpzb24sIGtleXMpOwogICAgICAgIC8vY29sdW1ucwogICAgICAgIHRoaXMuY29sdW1ucyA9IGtleXMubWFwKGtleSA9PiB7CiAgICAgICAgICByZXR1cm4gewogICAgICAgICAgICBsYWJlbDoga2V5LnRvVXBwZXJDYXNlKCksCiAgICAgICAgICAgIGZpZWxkOiBrZXksCiAgICAgICAgICAgIHNvcnQ6ICdhc2MnCiAgICAgICAgICB9OwogICAgICAgIH0pOwogICAgICAgIC8vcm93cwogICAgICAgIGVudHJpZXMubWFwKGVudHJ5ID0+IHRoaXMucm93cy5wdXNoKGVudHJ5KSk7CiAgICAgIH0pCiAgfQp9Owo="},{"version":3,"sources":["DataTableJSONPage.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAsBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"DataTableJSONPage.vue","sourceRoot":"demo/docs/Tables","sourcesContent":["<template>\n  <mdb-container class=\"mt-5\">\n    <mdb-row class=\"mt-5 align-items-center justify-content-start\">\n      <h4 class=\"demo-title\"><strong>Datatables</strong></h4>\n      <a href=\"https://mdbootstrap.com/docs/vue/tables/datatables/?utm_source=DemoApp&utm_medium=MDBVueFree\" class=\"border grey-text px-2 border-light rounded ml-2\" target=\"_blank\"><mdb-icon icon=\"graduation-cap\" class=\"mr-2\"/>Docs</a>\n    </mdb-row>\n    <section class=\"demo-section\">\n      <h4>Datatable with other JSON data structure</h4>\n      <section>\n        <mdb-datatable\n          :data=\"data\"\n          striped\n          bordered\n          arrows\n          :display=\"3\"\n        />\n      </section>\n    </section>\n  </mdb-container>\n</template>\n\n<script>\n  import { mdbDatatable, mdbContainer, mdbRow, mdbIcon } from 'mdbvue';\n  export default {\n    components: {\n      mdbDatatable,\n      mdbContainer, \n      mdbRow,\n      mdbIcon\n    },\n    data() {\n      return {\n        columns: [],\n        rows: []\n      };\n    },\n    computed: {\n      data() {\n        return {\n          columns: this.columns,\n          rows: this.rows\n        };\n      },\n    },\n    methods: {\n      filterData(dataArr, keys) {\n        let data = dataArr.map(entry => {\n          let filteredEntry = {};\n          keys.forEach(key => {\n            if (key in entry) {\n              filteredEntry[key] = entry[key];\n            }\n          });\n          return filteredEntry;\n        });\n        return data;\n      }\n    },\n    mounted(){\n      fetch('https://jsonplaceholder.typicode.com/todos')\n        .then(res => res.json())\n        .then(json => {\n          let keys = [\"id\", \"title\", \"completed\"];\n          let entries = this.filterData(json, keys);\n          //columns\n          this.columns = keys.map(key => {\n            return {\n              label: key.toUpperCase(),\n              field: key,\n              sort: 'asc'\n            };\n          });\n          //rows\n          entries.map(entry => this.rows.push(entry));\n        })\n    }\n  };\n</script>\n\n<style>\n</style>\n"]}]}